//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimCAService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ws.apservice.viettel.com/", ConfigurationName="SimCAService.APWs")]
    public interface APWs
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.apservice.viettel.com/APWs/notificationRequest", ReplyAction="http://ws.apservice.viettel.com/APWs/notificationResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<SimCAService.transactionInfo> notificationAsync(SimCAService.transactionInfo tranInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.apservice.viettel.com/APWs/signatureRequest", ReplyAction="http://ws.apservice.viettel.com/APWs/signatureResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<SimCAService.transactionInfo> signatureAsync(SimCAService.transactionInfo tranInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.apservice.viettel.com/APWs/connectRequest", ReplyAction="http://ws.apservice.viettel.com/APWs/connectResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<SimCAService.transactionInfo> connectAsync(SimCAService.transactionInfo tranInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.apservice.viettel.com/APWs/certificateQueryRequest", ReplyAction="http://ws.apservice.viettel.com/APWs/certificateQueryResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<SimCAService.transactionInfo> certificateQueryAsync(SimCAService.transactionInfo tranInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.apservice.viettel.com/APWs/receiptRequest", ReplyAction="http://ws.apservice.viettel.com/APWs/receiptResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<SimCAService.transactionInfo> receiptAsync(SimCAService.transactionInfo tranInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.apservice.viettel.com/APWs/cancelSignatureRequest", ReplyAction="http://ws.apservice.viettel.com/APWs/cancelSignatureResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<SimCAService.transactionInfo> cancelSignatureAsync(SimCAService.transactionInfo tranInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.apservice.viettel.com/APWs/statusQueryRequest", ReplyAction="http://ws.apservice.viettel.com/APWs/statusQueryResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<SimCAService.transactionInfo> statusQueryAsync(SimCAService.transactionInfo tranInfo);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.apservice.viettel.com/")]
    public partial class transactionInfo
    {
        
        private string additionDataField;
        
        private string apIdField;
        
        private string apURLField;
        
        private string billCodeField;
        
        private int certIdField;
        
        private bool certIdFieldSpecified;
        
        private string certInfoField;
        
        private string[] certListField;
        
        private string certSerialField;
        
        private string dataDisplayField;
        
        private string dataSignField;
        
        private string errorCodeField;
        
        private string errorDescField;
        
        private int forcePINField;
        
        private bool forcePINFieldSpecified;
        
        private string keyHashField;
        
        private string keyValueField;
        
        private string macField;
        
        private string manufacturerField;
        
        private string msgModeField;
        
        private string msisdnField;
        
        private string mssFormatField;
        
        private string msspIdField;
        
        private string orgErrCodeField;
        
        private string orgErrDescField;
        
        private long orgRequestIdField;
        
        private bool orgRequestIdFieldSpecified;
        
        private string processCodeField;
        
        private string reqDateField;
        
        private long requestIdField;
        
        private bool requestIdFieldSpecified;
        
        private string resDateField;
        
        private int runImmField;
        
        private bool runImmFieldSpecified;
        
        private int sigTypeField;
        
        private bool sigTypeFieldSpecified;
        
        private string signatureField;
        
        private long timeoutField;
        
        private bool timeoutFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string additionData
        {
            get
            {
                return this.additionDataField;
            }
            set
            {
                this.additionDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string apId
        {
            get
            {
                return this.apIdField;
            }
            set
            {
                this.apIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string apURL
        {
            get
            {
                return this.apURLField;
            }
            set
            {
                this.apURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string billCode
        {
            get
            {
                return this.billCodeField;
            }
            set
            {
                this.billCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public int certId
        {
            get
            {
                return this.certIdField;
            }
            set
            {
                this.certIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool certIdSpecified
        {
            get
            {
                return this.certIdFieldSpecified;
            }
            set
            {
                this.certIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public string certInfo
        {
            get
            {
                return this.certInfoField;
            }
            set
            {
                this.certInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("certList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=6)]
        public string[] certList
        {
            get
            {
                return this.certListField;
            }
            set
            {
                this.certListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public string certSerial
        {
            get
            {
                return this.certSerialField;
            }
            set
            {
                this.certSerialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8)]
        public string dataDisplay
        {
            get
            {
                return this.dataDisplayField;
            }
            set
            {
                this.dataDisplayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9)]
        public string dataSign
        {
            get
            {
                return this.dataSignField;
            }
            set
            {
                this.dataSignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10)]
        public string errorCode
        {
            get
            {
                return this.errorCodeField;
            }
            set
            {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11)]
        public string errorDesc
        {
            get
            {
                return this.errorDescField;
            }
            set
            {
                this.errorDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12)]
        public int forcePIN
        {
            get
            {
                return this.forcePINField;
            }
            set
            {
                this.forcePINField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool forcePINSpecified
        {
            get
            {
                return this.forcePINFieldSpecified;
            }
            set
            {
                this.forcePINFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13)]
        public string keyHash
        {
            get
            {
                return this.keyHashField;
            }
            set
            {
                this.keyHashField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14)]
        public string keyValue
        {
            get
            {
                return this.keyValueField;
            }
            set
            {
                this.keyValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=15)]
        public string mac
        {
            get
            {
                return this.macField;
            }
            set
            {
                this.macField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=16)]
        public string manufacturer
        {
            get
            {
                return this.manufacturerField;
            }
            set
            {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=17)]
        public string msgMode
        {
            get
            {
                return this.msgModeField;
            }
            set
            {
                this.msgModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=18)]
        public string msisdn
        {
            get
            {
                return this.msisdnField;
            }
            set
            {
                this.msisdnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=19)]
        public string mssFormat
        {
            get
            {
                return this.mssFormatField;
            }
            set
            {
                this.mssFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=20)]
        public string msspId
        {
            get
            {
                return this.msspIdField;
            }
            set
            {
                this.msspIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=21)]
        public string orgErrCode
        {
            get
            {
                return this.orgErrCodeField;
            }
            set
            {
                this.orgErrCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=22)]
        public string orgErrDesc
        {
            get
            {
                return this.orgErrDescField;
            }
            set
            {
                this.orgErrDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=23)]
        public long orgRequestId
        {
            get
            {
                return this.orgRequestIdField;
            }
            set
            {
                this.orgRequestIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool orgRequestIdSpecified
        {
            get
            {
                return this.orgRequestIdFieldSpecified;
            }
            set
            {
                this.orgRequestIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=24)]
        public string processCode
        {
            get
            {
                return this.processCodeField;
            }
            set
            {
                this.processCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=25)]
        public string reqDate
        {
            get
            {
                return this.reqDateField;
            }
            set
            {
                this.reqDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=26)]
        public long requestId
        {
            get
            {
                return this.requestIdField;
            }
            set
            {
                this.requestIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool requestIdSpecified
        {
            get
            {
                return this.requestIdFieldSpecified;
            }
            set
            {
                this.requestIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=27)]
        public string resDate
        {
            get
            {
                return this.resDateField;
            }
            set
            {
                this.resDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=28)]
        public int runImm
        {
            get
            {
                return this.runImmField;
            }
            set
            {
                this.runImmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool runImmSpecified
        {
            get
            {
                return this.runImmFieldSpecified;
            }
            set
            {
                this.runImmFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=29)]
        public int sigType
        {
            get
            {
                return this.sigTypeField;
            }
            set
            {
                this.sigTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sigTypeSpecified
        {
            get
            {
                return this.sigTypeFieldSpecified;
            }
            set
            {
                this.sigTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=30)]
        public string signature
        {
            get
            {
                return this.signatureField;
            }
            set
            {
                this.signatureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=31)]
        public long timeout
        {
            get
            {
                return this.timeoutField;
            }
            set
            {
                this.timeoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeoutSpecified
        {
            get
            {
                return this.timeoutFieldSpecified;
            }
            set
            {
                this.timeoutFieldSpecified = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface APWsChannel : SimCAService.APWs, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class APWsClient : System.ServiceModel.ClientBase<SimCAService.APWs>, SimCAService.APWs
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public APWsClient() : 
                base(APWsClient.GetDefaultBinding(), APWsClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.APWsImplPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public APWsClient(EndpointConfiguration endpointConfiguration) : 
                base(APWsClient.GetBindingForEndpoint(endpointConfiguration), APWsClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public APWsClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(APWsClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public APWsClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(APWsClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public APWsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<SimCAService.transactionInfo> notificationAsync(SimCAService.transactionInfo tranInfo)
        {
            return base.Channel.notificationAsync(tranInfo);
        }
        
        public System.Threading.Tasks.Task<SimCAService.transactionInfo> signatureAsync(SimCAService.transactionInfo tranInfo)
        {
            return base.Channel.signatureAsync(tranInfo);
        }
        
        public System.Threading.Tasks.Task<SimCAService.transactionInfo> connectAsync(SimCAService.transactionInfo tranInfo)
        {
            return base.Channel.connectAsync(tranInfo);
        }
        
        public System.Threading.Tasks.Task<SimCAService.transactionInfo> certificateQueryAsync(SimCAService.transactionInfo tranInfo)
        {
            return base.Channel.certificateQueryAsync(tranInfo);
        }
        
        public System.Threading.Tasks.Task<SimCAService.transactionInfo> receiptAsync(SimCAService.transactionInfo tranInfo)
        {
            return base.Channel.receiptAsync(tranInfo);
        }
        
        public System.Threading.Tasks.Task<SimCAService.transactionInfo> cancelSignatureAsync(SimCAService.transactionInfo tranInfo)
        {
            return base.Channel.cancelSignatureAsync(tranInfo);
        }
        
        public System.Threading.Tasks.Task<SimCAService.transactionInfo> statusQueryAsync(SimCAService.transactionInfo tranInfo)
        {
            return base.Channel.statusQueryAsync(tranInfo);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.APWsImplPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.APWsImplPort))
            {
                return new System.ServiceModel.EndpointAddress("http://210.211.98.203:8080/apws.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return APWsClient.GetBindingForEndpoint(EndpointConfiguration.APWsImplPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return APWsClient.GetEndpointAddress(EndpointConfiguration.APWsImplPort);
        }
        
        public enum EndpointConfiguration
        {
            
            APWsImplPort,
        }
    }
}
